version: '3'
services:
  init:
    image: busybox
    volumes:
      - ./local-data/philomena:/system
    command: /bin/chown -v 200:200 /system
    restart: "no"

  app:
    build:
      context: .
      dockerfile: ./Dockerfile.app
    environment:
      - DEV_MODE
      - ELASTICSEARCH_HOST
      - REDIS_HOST
      - REDIS_PORT
      - APP_ENV
      - PASSWORD_PEPPER
      - OTP_SECRET_KEY
      - ANONYMOUS_NAME_SALT
      - IMAGE_URL_ROOT
      - AVATAR_URL_ROOT
      - ADVERT_URL_ROOT
      - BADGE_URL_ROOT
      - TAG_URL_ROOT
      - CHANNEL_URL_ROOT
      - IMAGE_FILE_ROOT
      - ADVERT_FILE_ROOT
      - AVATAR_FILE_ROOT
      - BADGE_FILE_ROOT
      - CHANNEL_IMAGE_FILE_ROOT
      - CHANNEL_BANNER_FILE_ROOT
      - TAG_FILE_ROOT
      - CDN_HOST
      - CAMO_HOST
      - CAMO_KEY
      - PROXY_HOST
      - APP_DIR
      - SECRET_KEY_BASE
      - APP_HOSTNAME
      - APP_PORT
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_HOST
      - POSTGRES_DB
      - POSTGRES_PORT
      - SMTP_RELAY
      - SMTP_PASSWORD
      - SMTP_DOMAIN
      - SMTP_USERNAME
      - SEED_ON_START=true
      - MAILER_ADDRESS
      - MIX_ENV
    tty: true
    depends_on:
      - postgres
      - elasticsearch
      - redis
    volumes:
      - ./local-data/philomena:/srv/philomena/priv/static/system
    # for debugging into the container when container-start fails, umcomment the following line:
    #entrypoint: ["sh", "-c", "sleep 2073600"]

  gdpr-cron:
    build:
      context: ./docker/gdpr
      dockerfile: ./Dockerfile
    depends_on:
      - postgres
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_HOST
      - POSTGRES_PORT

  postgres:
    image: postgres:12.3
    environment:
      - POSTGRES_PASSWORD
      - POSTGRES_USER
      - POSTGRES_DB
    volumes:
      - ./local-data/postgres:/var/lib/postgresql/data

  elasticsearch:
    image: elasticsearch:7.6.2
    volumes:
      - ./local-data/elastic:/var/lib/elasticsearch
    environment:
      - discovery.type=single-node
    ulimits:
      nofile:
          soft: 65536
          hard: 65536

  redis:
    image: redis:5.0.9

  web:
    build:
      context: .
      dockerfile: ./Dockerfile.web
    depends_on:
      - app
    extra_hosts:
      - kube-dns.kube-system.svc.cluster.local:127.0.0.11
    environment:
      - APP_HOST=app
    tmpfs:
      - /tmp
    ports:
      - '8080:8080'
    volumes:
      - ./local-data/philomena:/system
      - ./local-data/philomena:/srv/philomena/priv/static/system
